def quickselect(arr, k, left=0, right=None):     if right is None:         right = len(arr) - 1      if left == right:         return arr[left]      pivot_index = median_of_three(arr, left, right)     pivot_index = partition(arr, left, right, pivot_index)      if k == pivot_index:         return arr[k]     elif k < pivot_index:         return quickselect(arr, k, left, pivot_index - 1)     else:         return quickselect(arr, k, pivot_index, right)  def median_of_three(arr, left, right):     mid = (left + right) // 2     a = arr[left]     b = arr[mid]     c = arr[right]      if a <= b <= c:         return mid     elif c <= b <= a:         return mid     elif a <= c <= b:         return right     elif b <= c <= a:         return left     elif b <= a <= c:         return left     else:         return right  def partition(arr, left, right, pivot_index):     pivot_value = arr[pivot_index]     i = left - 1     j = right + 1      while True:         i += 1         while arr[i] < pivot_value:             i += 1          j -= 1         while arr[j] > pivot_value:             j -= 1          if i >= j:             return j + 1          arr[i], arr[j] = arr[j], arr[i]