class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        last = self.head
        while last.next:
            last = last.next
        last.next = new_node

    def intersection(self, list2):
        p = self.head
        q = list2.head
        result = LinkedList()
        visited = set()

        while p:
            visited.add(p.data)
            p = p.next

        while q:
            if q.data in visited:
                result.append(q.data)
            q = q.next

        return result

    def print_list(self):
        curr = self.head
        while curr:
            print(curr.data, end=" ")
            curr = curr.next
